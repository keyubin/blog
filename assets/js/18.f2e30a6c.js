(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{303:function(s,t,n){"use strict";n.r(t);var e=n(16),a=Object(e.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"vue-press-部署"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue-press-部署"}},[s._v("#")]),s._v(" vue press 部署")]),s._v(" "),n("ul",[n("li",[s._v("在github添加一个项目，clone到本地")]),s._v(" "),n("li",[s._v("将自己代码复制到项目中然后上传到github")])]),s._v(" "),n("p",[s._v("在根目录新建deploy.sh")]),s._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/env sh")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 确保脚本抛出遇到的错误")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -e\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成静态文件")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run docs:build\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入生成的文件夹")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" docs/.vuepress/dist\n\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" -A\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'deploy'")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果发布到 https://<USERNAME>.github.io/<REPO> --REPO对应仓库名称  ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push -f git@github.com:keyubin/blog.git master:gh-pages\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" -\n\n")])])]),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[s._v("WARNING")]),s._v(" "),n("p",[s._v("config.js 文件中的base配置 所对应的链接 应为仓库名称 仓库名为blog 对应链接为 "),n("code",[s._v("/blog/")]),n("br"),s._v("\n否则会造成静态资源加载失败")])]),s._v(" "),n("p",[s._v("修改根目录下的package.json")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('"scripts": {\n    "deploy": "deploy.sh",\n    "docs:dev": "vuepress dev docs",\n    "docs:build": "vuepress build docs"\n  },\n')])])]),n("ul",[n("li",[n("p",[s._v("运行 npm run deploy 将会自动部署到github")])]),s._v(" "),n("li",[n("p",[s._v("打开github  进入仓库 选择blog仓库后 进入deploy.sh文件中定义的分支名称 然后选择setting 找到GitHub Pages 下方source 选择该分支 将会自动部署到 "),n("code",[s._v("https://<USERNAME>.github.io/<REPO>")])])])])])}),[],!1,null,null,null);t.default=a.exports}}]);